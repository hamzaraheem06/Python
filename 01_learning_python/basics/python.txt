Python is a cool language, and JavaScript is a vibe-based language. C++ is for nerds.

Internal working of Python:
In other fundamental programming languages like C/C++, Java, etc., the source code is converted to machine code, machine code gives direct instructions to the computer hardware. However, Python code is firstly compiled to something called as Byte Code (.pyc). 

Byte Code is not a machine code. It cannot give direct instructions to CPU. This is done for the sake of optimization when we import multiple modules in a file. It doesn't happen when we work on a single or a top level file because there is no need of further optimization as there is one long single code that can be interpreted directly.

To execute/interprete this Byte Code, Python has a Python Virtual Machine (PVM) which interpretes this code and we get the output.

A simple flow chart of this would be:

Python Code (.py) ---(compiling)---> Byte Code (.pyc) ---(PVM)---> Output


Immutability and Mutability in Python:
Immutability refers to that any reference to value in memory is unchangable. It doesn't mean that the variable's value can't change. 

for example,
username = 'Hamza' will create an object in memory which will contain 'Hamza', and then username will point to it. If we change the username's value to 'Ayesha', an another object containing 'Ayesha' will be created and then the username will point to it. 
Notice how there has been no change in original 'Hamza' object, this is what Immutability means in Python and since there is a garbage collector provided in Python, the 'Hamza' object is automatically deleted by the garbage collector.
